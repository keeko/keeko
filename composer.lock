{
    "_readme": [
        "This file locks the dependencies of your project to a known state",
        "Read more about it at http://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file",
        "This file is @generated automatically"
    ],
    "hash": "784488ede1e0d65f3fee4b451d218ff1",
    "packages": [
        {
            "name": "cocur/slugify",
            "version": "v0.11",
            "source": {
                "type": "git",
                "url": "https://github.com/cocur/slugify.git",
                "reference": "39e856682c6599e9e6ba17526698568e21cf4fed"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/cocur/slugify/zipball/39e856682c6599e9e6ba17526698568e21cf4fed",
                "reference": "39e856682c6599e9e6ba17526698568e21cf4fed",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "require-dev": {
                "codeclimate/php-test-reporter": "dev-master",
                "laravel/framework": "~4.1",
                "mockery/mockery": "~0.9",
                "phpunit/phpunit": "~3.7",
                "sami/sami": "~1.3",
                "satooshi/php-coveralls": "0.6.*",
                "silex/silex": "~1.2",
                "symfony/dependency-injection": "~2.4",
                "symfony/http-kernel": "~2.4",
                "twig/twig": "~1",
                "zendframework/zend-modulemanager": "~2.2",
                "zendframework/zend-servicemanager": "~2.2",
                "zendframework/zend-view": "~2.2"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Cocur\\Slugify\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ivo Bathke",
                    "email": "ivo.bathke@gmail.com"
                },
                {
                    "name": "Florian Eckerstorfer",
                    "email": "florian@eckerstorfer.co",
                    "homepage": "https://florian.ec"
                }
            ],
            "description": "Converts a string into a slug.",
            "keywords": [
                "slug",
                "slugify"
            ],
            "time": "2014-11-23 21:41:24"
        },
        {
            "name": "composer/composer",
            "version": "dev-master",
            "source": {
                "type": "git",
                "url": "https://github.com/composer/composer.git",
                "reference": "89a7202399825da580f5a91e31fd9ecf1ed39269"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/composer/composer/zipball/89a7202399825da580f5a91e31fd9ecf1ed39269",
                "reference": "89a7202399825da580f5a91e31fd9ecf1ed39269",
                "shasum": ""
            },
            "require": {
                "justinrainbow/json-schema": "~1.1",
                "php": ">=5.3.2",
                "seld/jsonlint": "~1.0",
                "symfony/console": "~2.3",
                "symfony/finder": "~2.2",
                "symfony/process": "~2.1"
            },
            "require-dev": {
                "phpunit/phpunit": "~4.0"
            },
            "suggest": {
                "ext-openssl": "Enabling the openssl extension allows you to access https URLs for repositories and packages",
                "ext-zip": "Enabling the zip extension allows you to unzip archives, and allows gzip compression of all internet traffic"
            },
            "bin": [
                "bin/composer"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Composer": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nils Adermann",
                    "email": "naderman@naderman.de",
                    "homepage": "http://www.naderman.de"
                },
                {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "homepage": "http://seld.be"
                }
            ],
            "description": "Composer helps you declare, manage and install dependencies of PHP projects, ensuring you have the right stack everywhere.",
            "homepage": "http://getcomposer.org/",
            "keywords": [
                "autoload",
                "dependency",
                "package"
            ],
            "time": "2014-12-12 22:45:23"
        },
        {
            "name": "gossi/collection",
            "version": "v1.4.1",
            "source": {
                "type": "git",
                "url": "https://github.com/gossi/collection.git",
                "reference": "339bda4e443645d0cd9165302ee23f44d4bdfa90"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/gossi/collection/zipball/339bda4e443645d0cd9165302ee23f44d4bdfa90",
                "reference": "339bda4e443645d0cd9165302ee23f44d4bdfa90",
                "shasum": ""
            },
            "require": {
                "gossi/common": "~0",
                "php": ">=5.4"
            },
            "require-dev": {
                "phpunit/phpunit": "~4"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "gossi\\collection\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "PHP Collections library",
            "keywords": [
                "collection",
                "collections",
                "list",
                "map",
                "queue",
                "set",
                "stack"
            ],
            "time": "2014-11-09 19:10:34"
        },
        {
            "name": "gossi/common",
            "version": "v0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/gossi/common.git",
                "reference": "88362cd8c06d0f5f7d02870f64105d3912d95044"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/gossi/common/zipball/88362cd8c06d0f5f7d02870f64105d3912d95044",
                "reference": "88362cd8c06d0f5f7d02870f64105d3912d95044",
                "shasum": ""
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "gossi\\common\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Common php interfaces and classes",
            "keywords": [
                "commons",
                "php"
            ],
            "time": "2014-11-06 01:24:21"
        },
        {
            "name": "gossi/trixionary",
            "version": "dev-master",
            "source": {
                "type": "git",
                "url": "https://github.com/gossi/trixionary.git",
                "reference": "5c72497be5bb33a52e524bb01110b4a646acf4ca"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/gossi/trixionary/zipball/5c72497be5bb33a52e524bb01110b4a646acf4ca",
                "reference": "5c72497be5bb33a52e524bb01110b4a646acf4ca",
                "shasum": ""
            },
            "require": {
                "keeko/composer-installer": "*",
                "php": ">=5.4"
            },
            "require-dev": {
                "composer/composer": "@dev",
                "keeko/core": "dev-master",
                "propel/propel": "@dev"
            },
            "type": "keeko-module",
            "extra": {
                "keeko": {
                    "module": {
                        "title": "Trixionary",
                        "class": "gossi\\trixionary\\TrixionaryModule",
                        "slug": "gossi.trixionary",
                        "default-action": "sport-list",
                        "actions": {
                            "sport-create": {
                                "title": "Creates a sport",
                                "class": "gossi\\trixionary\\action\\SportCreateAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\SportCreateJsonResponse"
                                }
                            },
                            "sport-read": {
                                "title": "Reads a sport",
                                "class": "gossi\\trixionary\\action\\SportReadAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\SportReadJsonResponse"
                                }
                            },
                            "sport-list": {
                                "title": "List all sports",
                                "class": "gossi\\trixionary\\action\\SportListAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\SportListJsonResponse"
                                }
                            },
                            "sport-update": {
                                "title": "Updates a sport",
                                "class": "gossi\\trixionary\\action\\SportUpdateAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\SportUpdateJsonResponse"
                                }
                            },
                            "sport-delete": {
                                "title": "Deletes a sport",
                                "class": "gossi\\trixionary\\action\\SportDeleteAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\SportDeleteJsonResponse"
                                }
                            },
                            "position-create": {
                                "title": "Creates a position",
                                "class": "gossi\\trixionary\\action\\PositionCreateAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\PositionCreateJsonResponse"
                                }
                            },
                            "position-read": {
                                "title": "Reads a position",
                                "class": "gossi\\trixionary\\action\\PositionReadAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\PositionReadJsonResponse"
                                }
                            },
                            "position-list": {
                                "title": "List all positions",
                                "class": "gossi\\trixionary\\action\\PositionListAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\PositionListJsonResponse"
                                }
                            },
                            "position-update": {
                                "title": "Updates a position",
                                "class": "gossi\\trixionary\\action\\PositionUpdateAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\PositionUpdateJsonResponse"
                                }
                            },
                            "position-delete": {
                                "title": "Deletes a position",
                                "class": "gossi\\trixionary\\action\\PositionDeleteAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\PositionDeleteJsonResponse"
                                }
                            },
                            "movement-create": {
                                "title": "Creates a movement",
                                "class": "gossi\\trixionary\\action\\MovementCreateAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\MovementCreateJsonResponse"
                                }
                            },
                            "movement-read": {
                                "title": "Reads a movement",
                                "class": "gossi\\trixionary\\action\\MovementReadAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\MovementReadJsonResponse"
                                }
                            },
                            "movement-list": {
                                "title": "List all movements",
                                "class": "gossi\\trixionary\\action\\MovementListAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\MovementListJsonResponse"
                                }
                            },
                            "movement-update": {
                                "title": "Updates a movement",
                                "class": "gossi\\trixionary\\action\\MovementUpdateAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\MovementUpdateJsonResponse"
                                }
                            },
                            "movement-delete": {
                                "title": "Deletes a movement",
                                "class": "gossi\\trixionary\\action\\MovementDeleteAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\MovementDeleteJsonResponse"
                                }
                            },
                            "skill-create": {
                                "title": "Creates a skill",
                                "class": "gossi\\trixionary\\action\\SkillCreateAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\SkillCreateJsonResponse"
                                }
                            },
                            "skill-read": {
                                "title": "Reads a skill",
                                "class": "gossi\\trixionary\\action\\SkillReadAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\SkillReadJsonResponse"
                                }
                            },
                            "skill-list": {
                                "title": "List all skills",
                                "class": "gossi\\trixionary\\action\\SkillListAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\SkillListJsonResponse"
                                }
                            },
                            "skill-update": {
                                "title": "Updates a skill",
                                "class": "gossi\\trixionary\\action\\SkillUpdateAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\SkillUpdateJsonResponse"
                                }
                            },
                            "skill-delete": {
                                "title": "Deletes a skill",
                                "class": "gossi\\trixionary\\action\\SkillDeleteAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\SkillDeleteJsonResponse"
                                }
                            },
                            "concept-create": {
                                "title": "Creates a concept",
                                "class": "gossi\\trixionary\\action\\ConceptCreateAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\ConceptCreateJsonResponse"
                                }
                            },
                            "concept-read": {
                                "title": "Reads a concept",
                                "class": "gossi\\trixionary\\action\\ConceptReadAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\ConceptReadJsonResponse"
                                }
                            },
                            "concept-list": {
                                "title": "List all concepts",
                                "class": "gossi\\trixionary\\action\\ConceptListAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\ConceptListJsonResponse"
                                }
                            },
                            "concept-update": {
                                "title": "Updates a concept",
                                "class": "gossi\\trixionary\\action\\ConceptUpdateAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\ConceptUpdateJsonResponse"
                                }
                            },
                            "concept-delete": {
                                "title": "Deletes a concept",
                                "class": "gossi\\trixionary\\action\\ConceptDeleteAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\ConceptDeleteJsonResponse"
                                }
                            },
                            "group-create": {
                                "title": "Creates a group",
                                "class": "gossi\\trixionary\\action\\GroupCreateAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\GroupCreateJsonResponse"
                                }
                            },
                            "group-read": {
                                "title": "Reads a group",
                                "class": "gossi\\trixionary\\action\\GroupReadAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\GroupReadJsonResponse"
                                }
                            },
                            "group-list": {
                                "title": "List all groups",
                                "class": "gossi\\trixionary\\action\\GroupListAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\GroupListJsonResponse"
                                }
                            },
                            "group-update": {
                                "title": "Updates a group",
                                "class": "gossi\\trixionary\\action\\GroupUpdateAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\GroupUpdateJsonResponse"
                                }
                            },
                            "group-delete": {
                                "title": "Deletes a group",
                                "class": "gossi\\trixionary\\action\\GroupDeleteAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "json": "gossi\\trixionary\\response\\GroupDeleteJsonResponse"
                                }
                            }
                        },
                        "api": {
                            "swaggerVersion": "1.2",
                            "resourcePath": "/gossi.trixionary",
                            "apis": [
                                {
                                    "path": "/sports",
                                    "operations": [
                                        {
                                            "method": "POST",
                                            "summary": "Creates a sport",
                                            "nickname": "sport-create",
                                            "type": "Sport",
                                            "parameters": [
                                                {
                                                    "name": "body",
                                                    "description": "The new sport",
                                                    "required": true,
                                                    "type": "WritableSport",
                                                    "paramType": "body"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "GET",
                                            "summary": "List all sports",
                                            "nickname": "sport-list",
                                            "type": "PagedSports"
                                        }
                                    ]
                                },
                                {
                                    "path": "/sports/{id}",
                                    "operations": [
                                        {
                                            "method": "GET",
                                            "summary": "Reads a sport",
                                            "nickname": "sport-read",
                                            "type": "Sport",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The sport id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No sport found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "PUT",
                                            "summary": "Updates a sport",
                                            "nickname": "sport-update",
                                            "type": "Sport",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The sport id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No sport found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "DELETE",
                                            "summary": "Deletes a sport",
                                            "nickname": "sport-delete",
                                            "type": "Sport",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The sport id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No sport found"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "path": "/positions",
                                    "operations": [
                                        {
                                            "method": "POST",
                                            "summary": "Creates a position",
                                            "nickname": "position-create",
                                            "type": "Position",
                                            "parameters": [
                                                {
                                                    "name": "body",
                                                    "description": "The new position",
                                                    "required": true,
                                                    "type": "WritablePosition",
                                                    "paramType": "body"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "GET",
                                            "summary": "List all positions",
                                            "nickname": "position-list",
                                            "type": "PagedPositions"
                                        }
                                    ]
                                },
                                {
                                    "path": "/positions/{id}",
                                    "operations": [
                                        {
                                            "method": "GET",
                                            "summary": "Reads a position",
                                            "nickname": "position-read",
                                            "type": "Position",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The position id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No position found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "PUT",
                                            "summary": "Updates a position",
                                            "nickname": "position-update",
                                            "type": "Position",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The position id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No position found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "DELETE",
                                            "summary": "Deletes a position",
                                            "nickname": "position-delete",
                                            "type": "Position",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The position id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No position found"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "path": "/movements",
                                    "operations": [
                                        {
                                            "method": "POST",
                                            "summary": "Creates a movement",
                                            "nickname": "movement-create",
                                            "type": "Movement",
                                            "parameters": [
                                                {
                                                    "name": "body",
                                                    "description": "The new movement",
                                                    "required": true,
                                                    "type": "WritableMovement",
                                                    "paramType": "body"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "GET",
                                            "summary": "List all movements",
                                            "nickname": "movement-list",
                                            "type": "PagedMovements"
                                        }
                                    ]
                                },
                                {
                                    "path": "/movements/{id}",
                                    "operations": [
                                        {
                                            "method": "GET",
                                            "summary": "Reads a movement",
                                            "nickname": "movement-read",
                                            "type": "Movement",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The movement id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No movement found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "PUT",
                                            "summary": "Updates a movement",
                                            "nickname": "movement-update",
                                            "type": "Movement",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The movement id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No movement found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "DELETE",
                                            "summary": "Deletes a movement",
                                            "nickname": "movement-delete",
                                            "type": "Movement",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The movement id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No movement found"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "path": "/skills",
                                    "operations": [
                                        {
                                            "method": "POST",
                                            "summary": "Creates a skill",
                                            "nickname": "skill-create",
                                            "type": "Skill",
                                            "parameters": [
                                                {
                                                    "name": "body",
                                                    "description": "The new skill",
                                                    "required": true,
                                                    "type": "WritableSkill",
                                                    "paramType": "body"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "GET",
                                            "summary": "List all skills",
                                            "nickname": "skill-list",
                                            "type": "PagedSkills"
                                        }
                                    ]
                                },
                                {
                                    "path": "/skills/{id}",
                                    "operations": [
                                        {
                                            "method": "GET",
                                            "summary": "Reads a skill",
                                            "nickname": "skill-read",
                                            "type": "Skill",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The skill id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No skill found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "PUT",
                                            "summary": "Updates a skill",
                                            "nickname": "skill-update",
                                            "type": "Skill",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The skill id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No skill found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "DELETE",
                                            "summary": "Deletes a skill",
                                            "nickname": "skill-delete",
                                            "type": "Skill",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The skill id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No skill found"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "path": "/concepts",
                                    "operations": [
                                        {
                                            "method": "POST",
                                            "summary": "Creates a concept",
                                            "nickname": "concept-create",
                                            "type": "Concept",
                                            "parameters": [
                                                {
                                                    "name": "body",
                                                    "description": "The new concept",
                                                    "required": true,
                                                    "type": "WritableConcept",
                                                    "paramType": "body"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "GET",
                                            "summary": "List all concepts",
                                            "nickname": "concept-list",
                                            "type": "PagedConcepts"
                                        }
                                    ]
                                },
                                {
                                    "path": "/concepts/{id}",
                                    "operations": [
                                        {
                                            "method": "GET",
                                            "summary": "Reads a concept",
                                            "nickname": "concept-read",
                                            "type": "Concept",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The concept id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No concept found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "PUT",
                                            "summary": "Updates a concept",
                                            "nickname": "concept-update",
                                            "type": "Concept",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The concept id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No concept found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "DELETE",
                                            "summary": "Deletes a concept",
                                            "nickname": "concept-delete",
                                            "type": "Concept",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The concept id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No concept found"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "path": "/groups",
                                    "operations": [
                                        {
                                            "method": "POST",
                                            "summary": "Creates a group",
                                            "nickname": "group-create",
                                            "type": "Group",
                                            "parameters": [
                                                {
                                                    "name": "body",
                                                    "description": "The new group",
                                                    "required": true,
                                                    "type": "WritableGroup",
                                                    "paramType": "body"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "GET",
                                            "summary": "List all groups",
                                            "nickname": "group-list",
                                            "type": "PagedGroups"
                                        }
                                    ]
                                },
                                {
                                    "path": "/groups/{id}",
                                    "operations": [
                                        {
                                            "method": "GET",
                                            "summary": "Reads a group",
                                            "nickname": "group-read",
                                            "type": "Group",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The group id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No group found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "PUT",
                                            "summary": "Updates a group",
                                            "nickname": "group-update",
                                            "type": "Group",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The group id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No group found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "DELETE",
                                            "summary": "Deletes a group",
                                            "nickname": "group-delete",
                                            "type": "Group",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The group id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No group found"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "models": {
                                "Meta": {
                                    "id": "Meta",
                                    "properties": {
                                        "total": {
                                            "type": "integer"
                                        },
                                        "first": {
                                            "type": "string"
                                        },
                                        "next": {
                                            "type": "string"
                                        },
                                        "previous": {
                                            "type": "string"
                                        },
                                        "last": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "PagedSports": {
                                    "id": "PagedSports",
                                    "properties": {
                                        "sports": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "Sport"
                                            }
                                        },
                                        "meta": {
                                            "type": "Meta"
                                        }
                                    }
                                },
                                "WritableSport": {
                                    "id": "WritableSport",
                                    "properties": {
                                        "id": {
                                            "type": "int"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        },
                                        "skill_title": {
                                            "type": "string"
                                        },
                                        "skill_slug": {
                                            "type": "string"
                                        },
                                        "group_title": {
                                            "type": "string"
                                        },
                                        "group_slug": {
                                            "type": "string"
                                        },
                                        "compositional": {
                                            "type": "boolean"
                                        },
                                        "is_default": {
                                            "type": "boolean"
                                        },
                                        "movender": {
                                            "type": "string"
                                        },
                                        "has_movendum": {
                                            "type": "boolean"
                                        },
                                        "movendum": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "Sport": {
                                    "id": "Sport",
                                    "properties": {
                                        "id": {
                                            "type": "int"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        },
                                        "skill_title": {
                                            "type": "string"
                                        },
                                        "skill_slug": {
                                            "type": "string"
                                        },
                                        "group_title": {
                                            "type": "string"
                                        },
                                        "group_slug": {
                                            "type": "string"
                                        },
                                        "compositional": {
                                            "type": "boolean"
                                        },
                                        "is_default": {
                                            "type": "boolean"
                                        },
                                        "movender": {
                                            "type": "string"
                                        },
                                        "has_movendum": {
                                            "type": "boolean"
                                        },
                                        "movendum": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "PagedPositions": {
                                    "id": "PagedPositions",
                                    "properties": {
                                        "positions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "Position"
                                            }
                                        },
                                        "meta": {
                                            "type": "Meta"
                                        }
                                    }
                                },
                                "WritablePosition": {
                                    "id": "WritablePosition",
                                    "properties": {
                                        "id": {
                                            "type": "int"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "sport_id": {
                                            "type": "int"
                                        }
                                    }
                                },
                                "Position": {
                                    "id": "Position",
                                    "properties": {
                                        "id": {
                                            "type": "int"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "sport_id": {
                                            "type": "int"
                                        }
                                    }
                                },
                                "PagedMovements": {
                                    "id": "PagedMovements",
                                    "properties": {
                                        "movements": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "Movement"
                                            }
                                        },
                                        "meta": {
                                            "type": "Meta"
                                        }
                                    }
                                },
                                "WritableMovement": {
                                    "id": "WritableMovement",
                                    "properties": {
                                        "id": {
                                            "type": "int"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "sport_id": {
                                            "type": "int"
                                        },
                                        "is_translation": {
                                            "type": "boolean"
                                        },
                                        "is_rotation": {
                                            "type": "boolean"
                                        },
                                        "rotation_movender": {
                                            "type": "int"
                                        },
                                        "rotation_movendum": {
                                            "type": "int"
                                        },
                                        "rotation_synchronization": {
                                            "type": "int"
                                        },
                                        "descendant_class": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "Movement": {
                                    "id": "Movement",
                                    "properties": {
                                        "id": {
                                            "type": "int"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "sport_id": {
                                            "type": "int"
                                        },
                                        "is_translation": {
                                            "type": "boolean"
                                        },
                                        "is_rotation": {
                                            "type": "boolean"
                                        },
                                        "rotation_movender": {
                                            "type": "int"
                                        },
                                        "rotation_movendum": {
                                            "type": "int"
                                        },
                                        "rotation_synchronization": {
                                            "type": "int"
                                        },
                                        "descendant_class": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "PagedSkills": {
                                    "id": "PagedSkills",
                                    "properties": {
                                        "skills": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "Skill"
                                            }
                                        },
                                        "meta": {
                                            "type": "Meta"
                                        }
                                    }
                                },
                                "WritableSkill": {
                                    "id": "WritableSkill",
                                    "properties": {
                                        "alternative_name": {
                                            "type": "string"
                                        },
                                        "skill_id": {
                                            "type": "int"
                                        },
                                        "start_position_id": {
                                            "type": "int"
                                        },
                                        "end_position_id": {
                                            "type": "int"
                                        },
                                        "is_composite": {
                                            "type": "boolean"
                                        },
                                        "is_multiple": {
                                            "type": "boolean"
                                        },
                                        "multiplier": {
                                            "type": "int"
                                        },
                                        "concept_id": {
                                            "type": "int"
                                        },
                                        "id": {
                                            "type": "int"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "sport_id": {
                                            "type": "int"
                                        },
                                        "is_translation": {
                                            "type": "boolean"
                                        },
                                        "is_rotation": {
                                            "type": "boolean"
                                        },
                                        "rotation_movender": {
                                            "type": "int"
                                        },
                                        "rotation_movendum": {
                                            "type": "int"
                                        },
                                        "rotation_synchronization": {
                                            "type": "int"
                                        }
                                    }
                                },
                                "Skill": {
                                    "id": "Skill",
                                    "properties": {
                                        "alternative_name": {
                                            "type": "string"
                                        },
                                        "skill_id": {
                                            "type": "int"
                                        },
                                        "start_position_id": {
                                            "type": "int"
                                        },
                                        "end_position_id": {
                                            "type": "int"
                                        },
                                        "is_composite": {
                                            "type": "boolean"
                                        },
                                        "is_multiple": {
                                            "type": "boolean"
                                        },
                                        "multiplier": {
                                            "type": "int"
                                        },
                                        "concept_id": {
                                            "type": "int"
                                        },
                                        "id": {
                                            "type": "int"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "sport_id": {
                                            "type": "int"
                                        },
                                        "is_translation": {
                                            "type": "boolean"
                                        },
                                        "is_rotation": {
                                            "type": "boolean"
                                        },
                                        "rotation_movender": {
                                            "type": "int"
                                        },
                                        "rotation_movendum": {
                                            "type": "int"
                                        },
                                        "rotation_synchronization": {
                                            "type": "int"
                                        }
                                    }
                                },
                                "PagedConcepts": {
                                    "id": "PagedConcepts",
                                    "properties": {
                                        "concepts": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "Concept"
                                            }
                                        },
                                        "meta": {
                                            "type": "Meta"
                                        }
                                    }
                                },
                                "WritableConcept": {
                                    "id": "WritableConcept",
                                    "properties": {
                                        "id": {
                                            "type": "int"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "sport_id": {
                                            "type": "int"
                                        },
                                        "is_translation": {
                                            "type": "boolean"
                                        },
                                        "is_rotation": {
                                            "type": "boolean"
                                        },
                                        "rotation_movender": {
                                            "type": "int"
                                        },
                                        "rotation_movendum": {
                                            "type": "int"
                                        },
                                        "rotation_synchronization": {
                                            "type": "int"
                                        }
                                    }
                                },
                                "Concept": {
                                    "id": "Concept",
                                    "properties": {
                                        "id": {
                                            "type": "int"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "sport_id": {
                                            "type": "int"
                                        },
                                        "is_translation": {
                                            "type": "boolean"
                                        },
                                        "is_rotation": {
                                            "type": "boolean"
                                        },
                                        "rotation_movender": {
                                            "type": "int"
                                        },
                                        "rotation_movendum": {
                                            "type": "int"
                                        },
                                        "rotation_synchronization": {
                                            "type": "int"
                                        }
                                    }
                                },
                                "PagedGroups": {
                                    "id": "PagedGroups",
                                    "properties": {
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "Group"
                                            }
                                        },
                                        "meta": {
                                            "type": "Meta"
                                        }
                                    }
                                },
                                "WritableGroup": {
                                    "id": "WritableGroup",
                                    "properties": {
                                        "id": {
                                            "type": "int"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "Group": {
                                    "id": "Group",
                                    "properties": {
                                        "id": {
                                            "type": "int"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "slug": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "local": "../../"
            },
            "autoload": {
                "psr-4": {
                    "gossi\\trixionary\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "gossi"
                }
            ],
            "description": "Trixionary",
            "time": "2014-12-03 23:18:43"
        },
        {
            "name": "gossi/trixionary-app",
            "version": "dev-master",
            "source": {
                "type": "git",
                "url": "https://github.com/gossi/trixionary-app.git",
                "reference": "c157abf04ce2ac7d6ad64dddf1e6165f225bac40"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/gossi/trixionary-app/zipball/c157abf04ce2ac7d6ad64dddf1e6165f225bac40",
                "reference": "c157abf04ce2ac7d6ad64dddf1e6165f225bac40",
                "shasum": ""
            },
            "require": {
                "keeko/composer-installer": "*",
                "php": ">=5.4"
            },
            "require-dev": {
                "composer/composer": "@dev",
                "keeko/core": "dev-master",
                "propel/propel": "@dev"
            },
            "type": "keeko-app",
            "extra": {
                "keeko": {
                    "app": {
                        "title": "Trixionary App",
                        "class": "gossi\\trixionary\\app\\TrixionaryApplication"
                    }
                },
                "local": "../../"
            },
            "autoload": {
                "psr-4": {
                    "gossi\\trixionary\\app\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "gossi"
                }
            ],
            "description": "Trixionary Application",
            "time": "2014-11-13 21:12:31"
        },
        {
            "name": "gossi/trixionary-client",
            "version": "dev-master",
            "source": {
                "type": "git",
                "url": "https://github.com/gossi/trixionary-client.git",
                "reference": "f0d986bbcc47ed4e6dedf57bc2917be5188ec720"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/gossi/trixionary-client/zipball/f0d986bbcc47ed4e6dedf57bc2917be5188ec720",
                "reference": "f0d986bbcc47ed4e6dedf57bc2917be5188ec720",
                "shasum": ""
            },
            "require": {
                "cocur/slugify": "~0",
                "gossi/trixionary": "dev-master",
                "guzzle/guzzle": "~3",
                "imagine/imagine": "~0",
                "keeko/composer-installer": "*",
                "php": ">=5.4"
            },
            "require-dev": {
                "composer/composer": "@dev",
                "keeko/core": "dev-master",
                "propel/propel": "@dev"
            },
            "type": "keeko-module",
            "extra": {
                "keeko": {
                    "module": {
                        "title": "Trixionary Client",
                        "class": "gossi\\trixionary\\client\\TrixionaryClientModule",
                        "slug": "gossi.trixionary-client",
                        "default-action": "none",
                        "actions": {
                            "router": {
                                "title": "Trixionary Router",
                                "class": "gossi\\trixionary\\client\\action\\RouterAction",
                                "acl": [
                                    "guest",
                                    "user"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\RouterHtmlResponse"
                                }
                            },
                            "index": {
                                "title": "Trixionary Index",
                                "class": "gossi\\trixionary\\client\\action\\IndexAction",
                                "acl": [
                                    "guest",
                                    "user"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\IndexHtmlResponse"
                                }
                            },
                            "sport": {
                                "title": "Sports Listing",
                                "class": "gossi\\trixionary\\client\\action\\SportAction",
                                "acl": [
                                    "guest",
                                    "user"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\SportHtmlResponse"
                                }
                            },
                            "group": {
                                "title": "List skills of a group",
                                "class": "gossi\\trixionary\\client\\action\\GroupAction",
                                "acl": [
                                    "guest",
                                    "user"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\GroupHtmlResponse"
                                }
                            },
                            "skill": {
                                "title": "Displays a skill",
                                "class": "gossi\\trixionary\\client\\action\\SkillAction",
                                "acl": [
                                    "guest",
                                    "user"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\SkillHtmlResponse"
                                }
                            },
                            "skill-create": {
                                "title": "Creates a skill",
                                "class": "gossi\\trixionary\\client\\action\\SkillCreateAction",
                                "acl": [
                                    "user",
                                    "admin"
                                ],
                                "l10n": [
                                    "skill-form"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\SkillCreateHtmlResponse"
                                }
                            },
                            "skill-edit": {
                                "title": "Edits a skill",
                                "class": "gossi\\trixionary\\client\\action\\SkillEditAction",
                                "acl": [
                                    "user",
                                    "admin"
                                ],
                                "l10n": [
                                    "skill-form"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\SkillEditHtmlResponse"
                                }
                            },
                            "skill-delete": {
                                "title": "Deletes a skill",
                                "class": "gossi\\trixionary\\client\\action\\SkillDeleteAction",
                                "acl": [
                                    "user",
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\SkillDeleteHtmlResponse"
                                }
                            },
                            "group-create": {
                                "title": "Creates a group",
                                "class": "gossi\\trixionary\\client\\action\\GroupCreateAction",
                                "acl": [
                                    "user",
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\GroupCreateHtmlResponse"
                                }
                            },
                            "group-edit": {
                                "title": "Edits a group",
                                "class": "gossi\\trixionary\\client\\action\\GroupEditAction",
                                "acl": [
                                    "user",
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\GroupEditHtmlResponse"
                                }
                            },
                            "group-delete": {
                                "title": "Deletes a group",
                                "class": "gossi\\trixionary\\client\\action\\GroupDeleteAction",
                                "acl": [
                                    "user",
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\GroupDeleteHtmlResponse"
                                }
                            },
                            "position-create": {
                                "title": "Creates a position",
                                "class": "gossi\\trixionary\\client\\action\\PositionCreateAction",
                                "acl": [
                                    "user",
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\PositionCreateHtmlResponse"
                                }
                            },
                            "position-edit": {
                                "title": "Edits a position",
                                "class": "gossi\\trixionary\\client\\action\\PositionEditAction",
                                "acl": [
                                    "user",
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\PositionEditHtmlResponse"
                                }
                            },
                            "position-delete": {
                                "title": "Deletes a position",
                                "class": "gossi\\trixionary\\client\\action\\PositionDeleteAction",
                                "acl": [
                                    "user",
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\PositionDeleteHtmlResponse"
                                }
                            },
                            "transitions": {
                                "title": "Transitions",
                                "class": "gossi\\trixionary\\client\\action\\TransitionsAction",
                                "acl": [
                                    "guest"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\TransitionsHtmlResponse"
                                }
                            },
                            "graph": {
                                "title": "Graph",
                                "class": "gossi\\trixionary\\client\\action\\GraphAction",
                                "acl": [
                                    "guest"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\GraphHtmlResponse"
                                },
                                "assets": {
                                    "styles": [
                                        "components/vis/dist/vis.min.css"
                                    ],
                                    "scripts": [
                                        "components/vis/dist/vis.js",
                                        "components/bigscreen/bigscreen.min.js"
                                    ]
                                }
                            },
                            "upload": {
                                "title": "Upload a media file",
                                "class": "gossi\\trixionary\\client\\action\\UploadAction",
                                "acl": [
                                    "user",
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\UploadHtmlResponse"
                                }
                            },
                            "picture-create": {
                                "title": "Upload a new picture",
                                "class": "gossi\\trixionary\\client\\action\\PictureCreateAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\PictureCreateHtmlResponse"
                                },
                                "assets": {
                                    "styles": [
                                        "components/jquery-file-upload/css/jquery.fileupload.css"
                                    ],
                                    "scripts": [
                                        "components/jquery-file-upload/js/vendor/jquery.ui.widget.js",
                                        "components/jquery-file-upload/js/jquery.iframe-transport.js",
                                        "components/jquery-file-upload/js/jquery.fileupload.js"
                                    ]
                                }
                            },
                            "picture-edit": {
                                "title": "Edits a picture",
                                "class": "gossi\\trixionary\\client\\action\\PictureEditAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\PictureEditHtmlResponse"
                                }
                            },
                            "picture-delete": {
                                "title": "Delets a picture",
                                "class": "gossi\\trixionary\\client\\action\\PictureDeleteAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\PictureDeleteHtmlResponse"
                                }
                            },
                            "pictures": {
                                "title": "Manage Pictures",
                                "class": "gossi\\trixionary\\client\\action\\PictureManageAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\PictureManageHtmlResponse"
                                }
                            },
                            "video-create": {
                                "title": "Creates a new video",
                                "class": "gossi\\trixionary\\client\\action\\VideoCreateAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\VideoCreateHtmlResponse"
                                }
                            },
                            "video-edit": {
                                "title": "Edits a video",
                                "class": "gossi\\trixionary\\client\\action\\VideoEditAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\VideoEditHtmlResponse"
                                }
                            },
                            "video-delete": {
                                "title": "Deletes a video",
                                "class": "gossi\\trixionary\\client\\action\\VideoDeleteAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\VideoDeleteHtmlResponse"
                                }
                            },
                            "videos": {
                                "title": "Manage Videos",
                                "class": "gossi\\trixionary\\client\\action\\VideoManageAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\VideoManageHtmlResponse"
                                }
                            },
                            "reference-create": {
                                "title": "Creates a new reference",
                                "class": "gossi\\trixionary\\client\\action\\ReferenceCreateAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\ReferenceCreateHtmlResponse"
                                }
                            },
                            "reference-edit": {
                                "title": "Edits a reference",
                                "class": "gossi\\trixionary\\client\\action\\ReferenceEditAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\ReferenceEditHtmlResponse"
                                }
                            },
                            "reference-delete": {
                                "title": "Deletes a reference",
                                "class": "gossi\\trixionary\\client\\action\\ReferenceDeleteAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\ReferenceDeleteHtmlResponse"
                                }
                            },
                            "references": {
                                "title": "Manage references",
                                "class": "gossi\\trixionary\\client\\action\\ReferenceManageAction",
                                "acl": [
                                    "admin"
                                ],
                                "response": {
                                    "html": "gossi\\trixionary\\client\\response\\ReferenceManageHtmlResponse"
                                }
                            }
                        }
                    }
                },
                "local": "../../"
            },
            "autoload": {
                "psr-4": {
                    "gossi\\trixionary\\client\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "gossi"
                }
            ],
            "description": "Trixionary Client",
            "time": "2014-12-12 23:23:30"
        },
        {
            "name": "guzzle/guzzle",
            "version": "v3.9.2",
            "source": {
                "type": "git",
                "url": "https://github.com/guzzle/guzzle3.git",
                "reference": "54991459675c1a2924122afbb0e5609ade581155"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/guzzle/guzzle3/zipball/54991459675c1a2924122afbb0e5609ade581155",
                "reference": "54991459675c1a2924122afbb0e5609ade581155",
                "shasum": ""
            },
            "require": {
                "ext-curl": "*",
                "php": ">=5.3.3",
                "symfony/event-dispatcher": "~2.1"
            },
            "replace": {
                "guzzle/batch": "self.version",
                "guzzle/cache": "self.version",
                "guzzle/common": "self.version",
                "guzzle/http": "self.version",
                "guzzle/inflection": "self.version",
                "guzzle/iterator": "self.version",
                "guzzle/log": "self.version",
                "guzzle/parser": "self.version",
                "guzzle/plugin": "self.version",
                "guzzle/plugin-async": "self.version",
                "guzzle/plugin-backoff": "self.version",
                "guzzle/plugin-cache": "self.version",
                "guzzle/plugin-cookie": "self.version",
                "guzzle/plugin-curlauth": "self.version",
                "guzzle/plugin-error-response": "self.version",
                "guzzle/plugin-history": "self.version",
                "guzzle/plugin-log": "self.version",
                "guzzle/plugin-md5": "self.version",
                "guzzle/plugin-mock": "self.version",
                "guzzle/plugin-oauth": "self.version",
                "guzzle/service": "self.version",
                "guzzle/stream": "self.version"
            },
            "require-dev": {
                "doctrine/cache": "~1.3",
                "monolog/monolog": "~1.0",
                "phpunit/phpunit": "3.7.*",
                "psr/log": "~1.0",
                "symfony/class-loader": "~2.1",
                "zendframework/zend-cache": "2.*,<2.3",
                "zendframework/zend-log": "2.*,<2.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.9-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Guzzle": "src/",
                    "Guzzle\\Tests": "tests/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Michael Dowling",
                    "email": "mtdowling@gmail.com",
                    "homepage": "https://github.com/mtdowling"
                },
                {
                    "name": "Guzzle Community",
                    "homepage": "https://github.com/guzzle/guzzle/contributors"
                }
            ],
            "description": "Guzzle is a PHP HTTP client library and framework for building RESTful web service clients",
            "homepage": "http://guzzlephp.org/",
            "keywords": [
                "client",
                "curl",
                "framework",
                "http",
                "http client",
                "rest",
                "web service"
            ],
            "time": "2014-08-11 04:32:36"
        },
        {
            "name": "imagine/imagine",
            "version": "0.6.2",
            "source": {
                "type": "git",
                "url": "https://github.com/avalanche123/Imagine.git",
                "reference": "83ca8babede0e54f935ec09d55a726bf4b0a3f7c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/avalanche123/Imagine/zipball/83ca8babede0e54f935ec09d55a726bf4b0a3f7c",
                "reference": "83ca8babede0e54f935ec09d55a726bf4b0a3f7c",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.2"
            },
            "require-dev": {
                "sami/sami": "dev-master"
            },
            "suggest": {
                "ext-gd": "to use the GD implementation",
                "ext-gmagick": "to use the Gmagick implementation",
                "ext-imagick": "to use the Imagick implementation"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-develop": "0.7-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Imagine": "lib/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Bulat Shakirzyanov",
                    "email": "mallluhuct@gmail.com",
                    "homepage": "http://avalanche123.com"
                }
            ],
            "description": "Image processing for PHP 5.3",
            "homepage": "http://imagine.readthedocs.org/",
            "keywords": [
                "drawing",
                "graphics",
                "image manipulation",
                "image processing"
            ],
            "time": "2014-11-11 11:36:02"
        },
        {
            "name": "ircmaxell/password-compat",
            "version": "v1.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/ircmaxell/password_compat.git",
                "reference": "5c5cde8822a69545767f7c7f3058cb15ff84614c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/ircmaxell/password_compat/zipball/5c5cde8822a69545767f7c7f3058cb15ff84614c",
                "reference": "5c5cde8822a69545767f7c7f3058cb15ff84614c",
                "shasum": ""
            },
            "require-dev": {
                "phpunit/phpunit": "4.*"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "lib/password.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Anthony Ferrara",
                    "email": "ircmaxell@php.net",
                    "homepage": "http://blog.ircmaxell.com"
                }
            ],
            "description": "A compatibility library for the proposed simplified password hashing algorithm: https://wiki.php.net/rfc/password_hash",
            "homepage": "https://github.com/ircmaxell/password_compat",
            "keywords": [
                "hashing",
                "password"
            ],
            "time": "2014-11-20 16:49:30"
        },
        {
            "name": "justinrainbow/json-schema",
            "version": "1.3.7",
            "source": {
                "type": "git",
                "url": "https://github.com/justinrainbow/json-schema.git",
                "reference": "87b54b460febed69726c781ab67462084e97a105"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/justinrainbow/json-schema/zipball/87b54b460febed69726c781ab67462084e97a105",
                "reference": "87b54b460febed69726c781ab67462084e97a105",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.0"
            },
            "require-dev": {
                "json-schema/json-schema-test-suite": "1.1.0",
                "phpdocumentor/phpdocumentor": "~2",
                "phpunit/phpunit": "~3.7"
            },
            "bin": [
                "bin/validate-json"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.4.x-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "JsonSchema": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Bruno Prieto Reis",
                    "email": "bruno.p.reis@gmail.com"
                },
                {
                    "name": "Justin Rainbow",
                    "email": "justin.rainbow@gmail.com"
                },
                {
                    "name": "Igor Wiedler",
                    "email": "igor@wiedler.ch"
                },
                {
                    "name": "Robert Schönthal",
                    "email": "seroscho@googlemail.com"
                }
            ],
            "description": "A library to validate a json schema.",
            "homepage": "https://github.com/justinrainbow/json-schema",
            "keywords": [
                "json",
                "schema"
            ],
            "time": "2014-08-25 02:48:14"
        },
        {
            "name": "keeko/api-app",
            "version": "dev-master",
            "source": {
                "type": "git",
                "url": "https://github.com/keeko/api-app.git",
                "reference": "fb4377df57b4d7265977547d7a381923820ffeaa"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keeko/api-app/zipball/fb4377df57b4d7265977547d7a381923820ffeaa",
                "reference": "fb4377df57b4d7265977547d7a381923820ffeaa",
                "shasum": ""
            },
            "require": {
                "keeko/composer-installer": "*",
                "php": ">=5.4"
            },
            "require-dev": {
                "composer/composer": "@dev",
                "keeko/core": "dev-master",
                "propel/propel": "@dev"
            },
            "type": "keeko-app",
            "extra": {
                "keeko": {
                    "app": {
                        "title": "API Application",
                        "class": "\\keeko\\application\\api\\ApiApplication"
                    }
                },
                "local": "../../"
            },
            "autoload": {
                "psr-4": {
                    "keeko\\application\\api\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Keeko API Application",
            "keywords": [
                "api",
                "keeko"
            ],
            "time": "2014-11-15 02:31:56"
        },
        {
            "name": "keeko/auth",
            "version": "dev-master",
            "source": {
                "type": "git",
                "url": "https://github.com/keeko/auth.git",
                "reference": "c382c113ff880795abab0b072fd7232c1faa5c99"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keeko/auth/zipball/c382c113ff880795abab0b072fd7232c1faa5c99",
                "reference": "c382c113ff880795abab0b072fd7232c1faa5c99",
                "shasum": ""
            },
            "require": {
                "keeko/composer-installer": "*",
                "php": ">=5.4"
            },
            "require-dev": {
                "composer/composer": "@dev",
                "keeko/core": "dev-master",
                "propel/propel": "@dev"
            },
            "type": "keeko-module",
            "extra": {
                "local": "../../",
                "keeko": {
                    "module": {
                        "title": "Auth",
                        "class": "keeko\\auth\\AuthModule",
                        "slug": "auth",
                        "default-action": "auth-list",
                        "actions": {
                            "login": {
                                "class": "keeko\\auth\\action\\LoginAction",
                                "title": "Login",
                                "response": {
                                    "json": "keeko\\auth\\response\\LoginJsonResponse"
                                }
                            },
                            "logout": {
                                "class": "keeko\\auth\\action\\LogoutAction",
                                "title": "Logout",
                                "response": {
                                    "json": "keeko\\auth\\response\\LogoutJsonResponse"
                                }
                            }
                        },
                        "api": {
                            "swaggerVersion": "1.2",
                            "resourcePath": "/auth",
                            "apis": [
                                {
                                    "path": "/login",
                                    "operations": [
                                        {
                                            "method": "POST",
                                            "summary": "Login",
                                            "nickname": "login",
                                            "type": "LoginResponse",
                                            "parameters": [
                                                {
                                                    "name": "user",
                                                    "description": "The authenticating user",
                                                    "required": true,
                                                    "type": "string",
                                                    "paramType": "body"
                                                },
                                                {
                                                    "name": "password",
                                                    "description": "The password for the user",
                                                    "required": true,
                                                    "type": "string",
                                                    "paramType": "body"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "path": "/logout",
                                    "operations": [
                                        {
                                            "method": "GET",
                                            "summary": "Logout",
                                            "nickname": "logout",
                                            "type": "LogoutResponse"
                                        }
                                    ]
                                }
                            ],
                            "models": {
                                "LoginResponse": {
                                    "id": "LoginResponse",
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "LogoutResponse": {
                                    "id": "LogoutResponse",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "autoload": {
                "psr-4": {
                    "keeko\\auth\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Keeko auth module",
            "keywords": [
                "auth"
            ],
            "time": "2014-07-24 11:24:43"
        },
        {
            "name": "keeko/bootstrap-design",
            "version": "dev-master",
            "source": {
                "type": "git",
                "url": "https://github.com/keeko/bootstrap-design.git",
                "reference": "edba8a9686e47a2421bf1cb25cf04b6d81d4872d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keeko/bootstrap-design/zipball/edba8a9686e47a2421bf1cb25cf04b6d81d4872d",
                "reference": "edba8a9686e47a2421bf1cb25cf04b6d81d4872d",
                "shasum": ""
            },
            "require": {
                "keeko/composer-installer": "*",
                "php": ">=5.4"
            },
            "type": "keeko-design",
            "extra": {
                "keeko": {
                    "design": {
                        "title": "Bootstrap Design",
                        "layouts": {
                            "main": {
                                "title": "Default Layout",
                                "blocks": {
                                    "menu": "Menu",
                                    "main": "Main Content"
                                }
                            }
                        }
                    }
                }
            },
            "autoload": {
                "psr-0": {
                    "Keeko": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Keeko design with twitter bootstrap",
            "keywords": [
                "bootstrap",
                "design",
                "keeko"
            ],
            "time": "2014-07-22 22:53:06"
        },
        {
            "name": "keeko/composer-installer",
            "version": "0.20",
            "source": {
                "type": "git",
                "url": "https://github.com/keeko/composer-installer.git",
                "reference": "bcc984a0bb3ebe6192a00d53fbd9f3b6620d867e"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keeko/composer-installer/zipball/bcc984a0bb3ebe6192a00d53fbd9f3b6620d867e",
                "reference": "bcc984a0bb3ebe6192a00d53fbd9f3b6620d867e",
                "shasum": ""
            },
            "require": {
                "composer-plugin-api": "1.0.0",
                "php": ">=5.4"
            },
            "require-dev": {
                "composer/composer": "master-dev"
            },
            "type": "composer-plugin",
            "extra": {
                "class": "\\keeko\\composer\\KeekoComposerPlugin"
            },
            "autoload": {
                "psr-0": {
                    "keeko\\composer": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "gossi",
                    "homepage": "http://gos.si"
                }
            ],
            "description": "Keeko component installer",
            "time": "2013-12-08 23:04:34"
        },
        {
            "name": "keeko/core",
            "version": "dev-master",
            "source": {
                "type": "git",
                "url": "https://github.com/keeko/core.git",
                "reference": "d83c67a6a6980da686a63f625b73439726970863"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keeko/core/zipball/d83c67a6a6980da686a63f625b73439726970863",
                "reference": "d83c67a6a6980da686a63f625b73439726970863",
                "shasum": ""
            },
            "require": {
                "composer/composer": "dev-master",
                "gossi/collection": "~1",
                "ircmaxell/password-compat": "~1",
                "keeko/composer-installer": "*",
                "kriswallsmith/assetic": "~1",
                "monolog/monolog": "~1",
                "propel/propel": "dev-master",
                "symfony/config": "~2",
                "symfony/filesystem": "~2",
                "symfony/finder": "~2",
                "symfony/http-foundation": "~2",
                "symfony/options-resolver": "~2",
                "symfony/routing": "~2",
                "symfony/translation": "~2",
                "symfony/yaml": "~2",
                "twig/twig": "~1"
            },
            "type": "keeko-core",
            "autoload": {
                "psr-4": {
                    "keeko\\core\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "gossi",
                    "homepage": "http://gos.si"
                }
            ],
            "description": "Keeko core",
            "time": "2014-12-02 19:30:43"
        },
        {
            "name": "keeko/developer-app",
            "version": "dev-master",
            "source": {
                "type": "git",
                "url": "https://github.com/keeko/developer-app.git",
                "reference": "3c69fa947e943c8815610991202c47b44a63746c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keeko/developer-app/zipball/3c69fa947e943c8815610991202c47b44a63746c",
                "reference": "3c69fa947e943c8815610991202c47b44a63746c",
                "shasum": ""
            },
            "require": {
                "keeko/composer-installer": "*",
                "php": ">=5.4"
            },
            "require-dev": {
                "composer/composer": "@dev",
                "keeko/core": "dev-master",
                "propel/propel": "@dev"
            },
            "type": "keeko-app",
            "extra": {
                "keeko": {
                    "app": {
                        "title": "Developer Application",
                        "class": "\\keeko\\application\\developer\\DeveloperApplication"
                    }
                },
                "local": "../../"
            },
            "autoload": {
                "psr-4": {
                    "keeko\\application\\developer\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "App with developer information and API docs.",
            "keywords": [
                "api",
                "apidoc",
                "dev",
                "developer",
                "keeko"
            ],
            "time": "2014-11-15 02:32:06"
        },
        {
            "name": "keeko/group",
            "version": "dev-master",
            "source": {
                "type": "git",
                "url": "https://github.com/keeko/group.git",
                "reference": "fc8567d7e70baf2214dc3903ba9c29bb18330d77"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keeko/group/zipball/fc8567d7e70baf2214dc3903ba9c29bb18330d77",
                "reference": "fc8567d7e70baf2214dc3903ba9c29bb18330d77",
                "shasum": ""
            },
            "require": {
                "keeko/composer-installer": "*",
                "php": ">=5.4"
            },
            "require-dev": {
                "composer/composer": "@dev",
                "keeko/core": "dev-master",
                "propel/propel": "@dev"
            },
            "type": "keeko-module",
            "extra": {
                "keeko": {
                    "module": {
                        "title": "Group",
                        "class": "keeko\\group\\GroupModule",
                        "slug": "group",
                        "default-action": "group-list",
                        "actions": {
                            "group-create": {
                                "title": "Creates a group",
                                "class": "keeko\\group\\action\\GroupCreateAction",
                                "response": {
                                    "json": "keeko\\group\\response\\GroupCreateJsonResponse"
                                }
                            },
                            "group-read": {
                                "title": "Reads a group",
                                "class": "keeko\\group\\action\\GroupReadAction",
                                "response": {
                                    "json": "keeko\\group\\response\\GroupReadJsonResponse"
                                }
                            },
                            "group-list": {
                                "title": "List all groups",
                                "class": "keeko\\group\\action\\GroupListAction",
                                "response": {
                                    "json": "keeko\\group\\response\\GroupListJsonResponse"
                                }
                            },
                            "group-update": {
                                "title": "Updates a group",
                                "class": "keeko\\group\\action\\GroupUpdateAction",
                                "response": {
                                    "json": "keeko\\group\\response\\GroupUpdateJsonResponse"
                                }
                            },
                            "group-delete": {
                                "title": "Deletes a group",
                                "class": "keeko\\group\\action\\GroupDeleteAction",
                                "response": {
                                    "json": "keeko\\group\\response\\GroupDeleteJsonResponse"
                                }
                            }
                        },
                        "api": {
                            "swaggerVersion": "1.2",
                            "resourcePath": "/group",
                            "apis": [
                                {
                                    "path": "/groups",
                                    "operations": [
                                        {
                                            "method": "POST",
                                            "summary": "Creates a group",
                                            "nickname": "group-create",
                                            "type": "Group",
                                            "parameters": [
                                                {
                                                    "name": "body",
                                                    "description": "The new group",
                                                    "required": true,
                                                    "type": "WritableGroup",
                                                    "paramType": "body"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "GET",
                                            "summary": "List all groups",
                                            "nickname": "group-list",
                                            "type": "PagedGroups"
                                        }
                                    ]
                                },
                                {
                                    "path": "/groups/{id}",
                                    "operations": [
                                        {
                                            "method": "GET",
                                            "summary": "Reads a group",
                                            "nickname": "group-read",
                                            "type": "Group",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The group id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No group found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "PUT",
                                            "summary": "Updates a group",
                                            "nickname": "group-update",
                                            "type": "Group",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The group id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No group found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "DELETE",
                                            "summary": "Deletes a group",
                                            "nickname": "group-delete",
                                            "type": "Group",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The group id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No group found"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "models": {
                                "Meta": {
                                    "id": "Meta",
                                    "properties": {
                                        "total": {
                                            "type": "integer"
                                        },
                                        "first": {
                                            "type": "string"
                                        },
                                        "next": {
                                            "type": "string"
                                        },
                                        "previous": {
                                            "type": "string"
                                        },
                                        "last": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "PagedGroups": {
                                    "id": "PagedGroups",
                                    "properties": {
                                        "groups": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "Group"
                                            }
                                        },
                                        "meta": {
                                            "type": "Meta"
                                        }
                                    }
                                },
                                "WritableGroup": {
                                    "id": "WritableGroup",
                                    "properties": {
                                        "id": {
                                            "type": "int"
                                        },
                                        "owner_id": {
                                            "type": "int"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "is_guest": {
                                            "type": "boolean"
                                        },
                                        "is_default": {
                                            "type": "boolean"
                                        },
                                        "is_active": {
                                            "type": "boolean"
                                        },
                                        "is_system": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "Group": {
                                    "id": "Group",
                                    "properties": {
                                        "id": {
                                            "type": "int"
                                        },
                                        "owner_id": {
                                            "type": "int"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "is_guest": {
                                            "type": "boolean"
                                        },
                                        "is_default": {
                                            "type": "boolean"
                                        },
                                        "is_active": {
                                            "type": "boolean"
                                        },
                                        "is_system": {
                                            "type": "boolean"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "updated_at": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "local": "../../"
            },
            "autoload": {
                "psr-4": {
                    "keeko\\group\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "gossi"
                }
            ],
            "time": "2014-11-11 14:04:02"
        },
        {
            "name": "keeko/user",
            "version": "dev-master",
            "source": {
                "type": "git",
                "url": "https://github.com/keeko/user.git",
                "reference": "f39b3026f3e0f558b64ca78ca0ac47862ccdc2c3"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keeko/user/zipball/f39b3026f3e0f558b64ca78ca0ac47862ccdc2c3",
                "reference": "f39b3026f3e0f558b64ca78ca0ac47862ccdc2c3",
                "shasum": ""
            },
            "require": {
                "keeko/composer-installer": "*",
                "php": ">=5.4"
            },
            "require-dev": {
                "composer/composer": "@dev",
                "keeko/core": "dev-master",
                "propel/propel": "@dev"
            },
            "type": "keeko-module",
            "extra": {
                "keeko": {
                    "module": {
                        "title": "Users",
                        "class": "keeko\\user\\UserModule",
                        "slug": "user",
                        "default-action": "user-list",
                        "actions": {
                            "user-list": {
                                "class": "keeko\\user\\action\\UserListAction",
                                "title": "List all users",
                                "response": {
                                    "json": "keeko\\user\\response\\UserListJsonResponse"
                                }
                            },
                            "user-create": {
                                "class": "keeko\\user\\action\\UserCreateAction",
                                "title": "Creates an user",
                                "response": {
                                    "json": "keeko\\user\\response\\UserCreateJsonResponse"
                                }
                            },
                            "user-read": {
                                "class": "keeko\\user\\action\\UserReadAction",
                                "title": "Reads an user",
                                "response": {
                                    "json": "keeko\\user\\response\\UserReadJsonResponse"
                                }
                            },
                            "user-update": {
                                "class": "keeko\\user\\action\\UserUpdateAction",
                                "title": "Updates an user",
                                "response": {
                                    "json": "keeko\\user\\response\\UserUpdateJsonResponse"
                                }
                            },
                            "user-delete": {
                                "class": "keeko\\user\\action\\UserDeleteAction",
                                "title": "Deletes an user",
                                "response": {
                                    "json": "keeko\\user\\response\\UserDeleteJsonResponse"
                                }
                            }
                        },
                        "codegen": {
                            "user": {
                                "write": {
                                    "conversion": {
                                        "password": "password_hash($v, PASSWORD_BCRYPT)"
                                    },
                                    "filter": [
                                        "passwordRecoverCode",
                                        "passwordRecoverTime"
                                    ]
                                },
                                "read": {
                                    "filter": [
                                        "password",
                                        "passwordRecoverCode",
                                        "passwordRecoverTime"
                                    ]
                                }
                            }
                        },
                        "api": {
                            "swaggerVersion": "1.2",
                            "resourcePath": "/user",
                            "apis": [
                                {
                                    "path": "/users",
                                    "operations": [
                                        {
                                            "method": "GET",
                                            "summary": "List all users",
                                            "nickname": "user-list",
                                            "type": "PagedUsers"
                                        },
                                        {
                                            "method": "POST",
                                            "summary": "Creates an user",
                                            "nickname": "user-create",
                                            "type": "User",
                                            "parameters": [
                                                {
                                                    "name": "body",
                                                    "description": "The new user",
                                                    "required": true,
                                                    "type": "WritableUser",
                                                    "paramType": "body"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "path": "/users/{id}",
                                    "operations": [
                                        {
                                            "method": "GET",
                                            "summary": "Reads an user",
                                            "nickname": "user-read",
                                            "type": "User",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The user id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No user found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "PUT",
                                            "summary": "Updates an user",
                                            "nickname": "user-update",
                                            "type": "User",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The user id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No user found"
                                                }
                                            ]
                                        },
                                        {
                                            "method": "DELETE",
                                            "summary": "Deletes an user",
                                            "nickname": "user-delete",
                                            "type": "User",
                                            "parameters": [
                                                {
                                                    "name": "id",
                                                    "description": "The user id",
                                                    "required": true,
                                                    "type": "id",
                                                    "paramType": "path"
                                                }
                                            ],
                                            "responseMessages": [
                                                {
                                                    "code": "400",
                                                    "message": "Invalid ID supplied"
                                                },
                                                {
                                                    "code": "404",
                                                    "message": "No user found"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "models": {
                                "Meta": {
                                    "id": "Meta",
                                    "properties": {
                                        "total": {
                                            "type": "integer"
                                        },
                                        "first": {
                                            "type": "string"
                                        },
                                        "next": {
                                            "type": "string"
                                        },
                                        "previous": {
                                            "type": "string"
                                        },
                                        "last": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "PagedUsers": {
                                    "id": "PagedUsers",
                                    "properties": {
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "User"
                                            }
                                        },
                                        "meta": {
                                            "type": "Meta"
                                        }
                                    }
                                },
                                "WritableUser": {
                                    "id": "WritableUser",
                                    "properties": {
                                        "id": {
                                            "type": "int"
                                        },
                                        "login_name": {
                                            "type": "string"
                                        },
                                        "password": {
                                            "type": "string"
                                        },
                                        "given_name": {
                                            "type": "string"
                                        },
                                        "family_name": {
                                            "type": "string"
                                        },
                                        "display_name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "country_iso_nr": {
                                            "type": "int"
                                        },
                                        "subdivision_id": {
                                            "type": "int"
                                        },
                                        "address": {
                                            "type": "string"
                                        },
                                        "address2": {
                                            "type": "string"
                                        },
                                        "birthday": {
                                            "type": "string"
                                        },
                                        "sex": {
                                            "type": "int"
                                        },
                                        "city": {
                                            "type": "string"
                                        },
                                        "postal_code": {
                                            "type": "string"
                                        },
                                        "password_recover_code": {
                                            "type": "string"
                                        },
                                        "password_recover_time": {
                                            "type": "string"
                                        },
                                        "location_status": {
                                            "type": "int"
                                        },
                                        "latitude": {
                                            "type": "double"
                                        },
                                        "longitude": {
                                            "type": "double"
                                        }
                                    }
                                },
                                "User": {
                                    "id": "User",
                                    "properties": {
                                        "id": {
                                            "type": "int"
                                        },
                                        "login_name": {
                                            "type": "string"
                                        },
                                        "given_name": {
                                            "type": "string"
                                        },
                                        "family_name": {
                                            "type": "string"
                                        },
                                        "display_name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "country_iso_nr": {
                                            "type": "int"
                                        },
                                        "subdivision_id": {
                                            "type": "int"
                                        },
                                        "address": {
                                            "type": "string"
                                        },
                                        "address2": {
                                            "type": "string"
                                        },
                                        "birthday": {
                                            "type": "string"
                                        },
                                        "sex": {
                                            "type": "int"
                                        },
                                        "city": {
                                            "type": "string"
                                        },
                                        "postal_code": {
                                            "type": "string"
                                        },
                                        "location_status": {
                                            "type": "int"
                                        },
                                        "latitude": {
                                            "type": "double"
                                        },
                                        "longitude": {
                                            "type": "double"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "updated_at": {
                                            "type": "string"
                                        },
                                        "password_recover_code": {
                                            "type": "string"
                                        },
                                        "password_recover_time": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "local": "../../"
            },
            "autoload": {
                "psr-4": {
                    "keeko\\user\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "gossi",
                    "homepage": "http://gos.si"
                }
            ],
            "description": "Keeko user module",
            "time": "2014-11-11 14:04:21"
        },
        {
            "name": "keeko/website-app",
            "version": "dev-master",
            "source": {
                "type": "git",
                "url": "https://github.com/keeko/website-app.git",
                "reference": "c5de76c9fbf747c5f5e345686bb82dffdd7e22bd"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/keeko/website-app/zipball/c5de76c9fbf747c5f5e345686bb82dffdd7e22bd",
                "reference": "c5de76c9fbf747c5f5e345686bb82dffdd7e22bd",
                "shasum": ""
            },
            "require": {
                "keeko/composer-installer": "*",
                "php": ">=5.4"
            },
            "require-dev": {
                "composer/composer": "@dev",
                "keeko/core": "dev-master",
                "propel/propel": "@dev"
            },
            "type": "keeko-app",
            "extra": {
                "keeko": {
                    "app": {
                        "title": "Website Application",
                        "class": "\\keeko\\application\\website\\WebsiteApplication"
                    }
                },
                "local": "../../"
            },
            "autoload": {
                "psr-4": {
                    "keeko\\application\\website\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "gossi",
                    "homepage": "http://gos.si"
                }
            ],
            "description": "Website Frontend App for Keeko",
            "time": "2014-07-22 22:58:48"
        },
        {
            "name": "kriswallsmith/assetic",
            "version": "v1.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/kriswallsmith/assetic.git",
                "reference": "b20efe38845d20458702f97f3ff625d80805897b"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/kriswallsmith/assetic/zipball/b20efe38845d20458702f97f3ff625d80805897b",
                "reference": "b20efe38845d20458702f97f3ff625d80805897b",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.1",
                "symfony/process": "~2.1"
            },
            "require-dev": {
                "cssmin/cssmin": "*",
                "joliclic/javascript-packer": "*",
                "kamicane/packager": "*",
                "leafo/lessphp": "*",
                "leafo/scssphp": "*",
                "leafo/scssphp-compass": "*",
                "mrclay/minify": "*",
                "patchwork/jsqueeze": "~1.0",
                "phpunit/phpunit": "~4",
                "psr/log": "~1.0",
                "ptachoire/cssembed": "*",
                "twig/twig": "~1.6"
            },
            "suggest": {
                "leafo/lessphp": "Assetic provides the integration with the lessphp LESS compiler",
                "leafo/scssphp": "Assetic provides the integration with the scssphp SCSS compiler",
                "leafo/scssphp-compass": "Assetic provides the integration with the SCSS compass plugin",
                "patchwork/jsqueeze": "Assetic provides the integration with the JSqueeze JavaScript compressor",
                "ptachoire/cssembed": "Assetic provides the integration with phpcssembed to embed data uris",
                "twig/twig": "Assetic provides the integration with the Twig templating engine"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.2-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Assetic": "src/"
                },
                "files": [
                    "src/functions.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Kris Wallsmith",
                    "email": "kris.wallsmith@gmail.com",
                    "homepage": "http://kriswallsmith.net/"
                }
            ],
            "description": "Asset Management for PHP",
            "homepage": "https://github.com/kriswallsmith/assetic",
            "keywords": [
                "assets",
                "compression",
                "minification"
            ],
            "time": "2014-12-12 05:04:05"
        },
        {
            "name": "monolog/monolog",
            "version": "1.11.0",
            "source": {
                "type": "git",
                "url": "https://github.com/Seldaek/monolog.git",
                "reference": "ec3961874c43840e96da3a8a1ed20d8c73d7e5aa"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/Seldaek/monolog/zipball/ec3961874c43840e96da3a8a1ed20d8c73d7e5aa",
                "reference": "ec3961874c43840e96da3a8a1ed20d8c73d7e5aa",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.0",
                "psr/log": "~1.0"
            },
            "provide": {
                "psr/log-implementation": "1.0.0"
            },
            "require-dev": {
                "aws/aws-sdk-php": "~2.4, >2.4.8",
                "doctrine/couchdb": "~1.0@dev",
                "graylog2/gelf-php": "~1.0",
                "phpunit/phpunit": "~3.7.0",
                "raven/raven": "~0.5",
                "ruflin/elastica": "0.90.*",
                "videlalvaro/php-amqplib": "~2.4"
            },
            "suggest": {
                "aws/aws-sdk-php": "Allow sending log messages to AWS services like DynamoDB",
                "doctrine/couchdb": "Allow sending log messages to a CouchDB server",
                "ext-amqp": "Allow sending log messages to an AMQP server (1.0+ required)",
                "ext-mongo": "Allow sending log messages to a MongoDB server",
                "graylog2/gelf-php": "Allow sending log messages to a GrayLog2 server",
                "raven/raven": "Allow sending log messages to a Sentry server",
                "rollbar/rollbar": "Allow sending log messages to Rollbar",
                "ruflin/elastica": "Allow sending log messages to an Elastic Search server",
                "videlalvaro/php-amqplib": "Allow sending log messages to an AMQP server using php-amqplib"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.11.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Monolog\\": "src/Monolog"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "homepage": "http://seld.be"
                }
            ],
            "description": "Sends your logs to files, sockets, inboxes, databases and various web services",
            "homepage": "http://github.com/Seldaek/monolog",
            "keywords": [
                "log",
                "logging",
                "psr-3"
            ],
            "time": "2014-09-30 13:30:58"
        },
        {
            "name": "propel/propel",
            "version": "dev-master",
            "source": {
                "type": "git",
                "url": "https://github.com/propelorm/Propel2.git",
                "reference": "9699a4e03a12baa9823afa051be5ed1d467e3afa"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/propelorm/Propel2/zipball/9699a4e03a12baa9823afa051be5ed1d467e3afa",
                "reference": "9699a4e03a12baa9823afa051be5ed1d467e3afa",
                "shasum": ""
            },
            "require": {
                "php": ">=5.4",
                "psr/log": "~1.0",
                "symfony/config": "~2.3",
                "symfony/console": "~2.3",
                "symfony/filesystem": "~2.3",
                "symfony/finder": "~2.3",
                "symfony/validator": "~2.3",
                "symfony/yaml": "~2.3"
            },
            "require-dev": {
                "behat/behat": "~2.4",
                "monolog/monolog": "~1.3",
                "phpunit/phpunit": "~4.0"
            },
            "suggest": {
                "monolog/monolog": "The recommended logging library to use with Propel."
            },
            "bin": [
                "bin/propel"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Propel": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "William Durand",
                    "email": "william.durand1@gmail.com"
                }
            ],
            "description": "Propel2 is an open-source Object-Relational Mapping (ORM) for PHP 5.4",
            "homepage": "http://www.propelorm.org/",
            "keywords": [
                "Active Record",
                "orm",
                "persistence"
            ],
            "time": "2014-12-09 12:44:38"
        },
        {
            "name": "psr/log",
            "version": "1.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/log.git",
                "reference": "fe0936ee26643249e916849d48e3a51d5f5e278b"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/log/zipball/fe0936ee26643249e916849d48e3a51d5f5e278b",
                "reference": "fe0936ee26643249e916849d48e3a51d5f5e278b",
                "shasum": ""
            },
            "type": "library",
            "autoload": {
                "psr-0": {
                    "Psr\\Log\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "http://www.php-fig.org/"
                }
            ],
            "description": "Common interface for logging libraries",
            "keywords": [
                "log",
                "psr",
                "psr-3"
            ],
            "time": "2012-12-21 11:40:51"
        },
        {
            "name": "seld/jsonlint",
            "version": "1.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/Seldaek/jsonlint.git",
                "reference": "a7bc2ec9520ad15382292591b617c43bdb1fec35"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/Seldaek/jsonlint/zipball/a7bc2ec9520ad15382292591b617c43bdb1fec35",
                "reference": "a7bc2ec9520ad15382292591b617c43bdb1fec35",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.0"
            },
            "bin": [
                "bin/jsonlint"
            ],
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Seld\\JsonLint\\": "src/Seld/JsonLint/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "homepage": "http://seld.be"
                }
            ],
            "description": "JSON Linter",
            "keywords": [
                "json",
                "linter",
                "parser",
                "validator"
            ],
            "time": "2014-09-05 15:36:20"
        },
        {
            "name": "symfony/config",
            "version": "v2.6.1",
            "target-dir": "Symfony/Component/Config",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/Config.git",
                "reference": "84c0c150c1520995f09ea9e47e817068b353cb0f"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/Config/zipball/84c0c150c1520995f09ea9e47e817068b353cb0f",
                "reference": "84c0c150c1520995f09ea9e47e817068b353cb0f",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3",
                "symfony/filesystem": "~2.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.6-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Symfony\\Component\\Config\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Symfony Community",
                    "homepage": "http://symfony.com/contributors"
                },
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                }
            ],
            "description": "Symfony Config Component",
            "homepage": "http://symfony.com",
            "time": "2014-12-02 20:19:20"
        },
        {
            "name": "symfony/console",
            "version": "v2.6.1",
            "target-dir": "Symfony/Component/Console",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/Console.git",
                "reference": "ef825fd9f809d275926547c9e57cbf14968793e8"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/Console/zipball/ef825fd9f809d275926547c9e57cbf14968793e8",
                "reference": "ef825fd9f809d275926547c9e57cbf14968793e8",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "require-dev": {
                "psr/log": "~1.0",
                "symfony/event-dispatcher": "~2.1",
                "symfony/process": "~2.1"
            },
            "suggest": {
                "psr/log": "For using the console logger",
                "symfony/event-dispatcher": "",
                "symfony/process": ""
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.6-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Symfony\\Component\\Console\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Symfony Community",
                    "homepage": "http://symfony.com/contributors"
                },
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                }
            ],
            "description": "Symfony Console Component",
            "homepage": "http://symfony.com",
            "time": "2014-12-02 20:19:20"
        },
        {
            "name": "symfony/event-dispatcher",
            "version": "v2.6.1",
            "target-dir": "Symfony/Component/EventDispatcher",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/EventDispatcher.git",
                "reference": "720fe9bca893df7ad1b4546649473b5afddf0216"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/EventDispatcher/zipball/720fe9bca893df7ad1b4546649473b5afddf0216",
                "reference": "720fe9bca893df7ad1b4546649473b5afddf0216",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "require-dev": {
                "psr/log": "~1.0",
                "symfony/config": "~2.0",
                "symfony/dependency-injection": "~2.6",
                "symfony/expression-language": "~2.6",
                "symfony/stopwatch": "~2.2"
            },
            "suggest": {
                "symfony/dependency-injection": "",
                "symfony/http-kernel": ""
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.6-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Symfony\\Component\\EventDispatcher\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Symfony Community",
                    "homepage": "http://symfony.com/contributors"
                },
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                }
            ],
            "description": "Symfony EventDispatcher Component",
            "homepage": "http://symfony.com",
            "time": "2014-12-02 20:19:20"
        },
        {
            "name": "symfony/filesystem",
            "version": "v2.6.1",
            "target-dir": "Symfony/Component/Filesystem",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/Filesystem.git",
                "reference": "ff6efc95256cb33031933729e68b01d720b5436b"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/Filesystem/zipball/ff6efc95256cb33031933729e68b01d720b5436b",
                "reference": "ff6efc95256cb33031933729e68b01d720b5436b",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.6-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Symfony\\Component\\Filesystem\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Symfony Community",
                    "homepage": "http://symfony.com/contributors"
                },
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                }
            ],
            "description": "Symfony Filesystem Component",
            "homepage": "http://symfony.com",
            "time": "2014-12-02 20:19:20"
        },
        {
            "name": "symfony/finder",
            "version": "v2.6.1",
            "target-dir": "Symfony/Component/Finder",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/Finder.git",
                "reference": "0d3ef7f6ec55a7af5eca7914eaa0dacc04ccc721"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/Finder/zipball/0d3ef7f6ec55a7af5eca7914eaa0dacc04ccc721",
                "reference": "0d3ef7f6ec55a7af5eca7914eaa0dacc04ccc721",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.6-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Symfony\\Component\\Finder\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Symfony Community",
                    "homepage": "http://symfony.com/contributors"
                },
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                }
            ],
            "description": "Symfony Finder Component",
            "homepage": "http://symfony.com",
            "time": "2014-12-02 20:19:20"
        },
        {
            "name": "symfony/http-foundation",
            "version": "v2.6.1",
            "target-dir": "Symfony/Component/HttpFoundation",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/HttpFoundation.git",
                "reference": "0109221f3cf012bf027768ad3e4236dae1af5332"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/HttpFoundation/zipball/0109221f3cf012bf027768ad3e4236dae1af5332",
                "reference": "0109221f3cf012bf027768ad3e4236dae1af5332",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "require-dev": {
                "symfony/expression-language": "~2.4"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.6-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Symfony\\Component\\HttpFoundation\\": ""
                },
                "classmap": [
                    "Symfony/Component/HttpFoundation/Resources/stubs"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Symfony Community",
                    "homepage": "http://symfony.com/contributors"
                },
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                }
            ],
            "description": "Symfony HttpFoundation Component",
            "homepage": "http://symfony.com",
            "time": "2014-12-02 20:19:20"
        },
        {
            "name": "symfony/options-resolver",
            "version": "v2.6.1",
            "target-dir": "Symfony/Component/OptionsResolver",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/OptionsResolver.git",
                "reference": "007d41188680f7ea78afc2d9ffea18f4274146ca"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/OptionsResolver/zipball/007d41188680f7ea78afc2d9ffea18f4274146ca",
                "reference": "007d41188680f7ea78afc2d9ffea18f4274146ca",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.6-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Symfony\\Component\\OptionsResolver\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Symfony Community",
                    "homepage": "http://symfony.com/contributors"
                },
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                }
            ],
            "description": "Symfony OptionsResolver Component",
            "homepage": "http://symfony.com",
            "keywords": [
                "config",
                "configuration",
                "options"
            ],
            "time": "2014-11-03 09:04:37"
        },
        {
            "name": "symfony/process",
            "version": "v2.6.1",
            "target-dir": "Symfony/Component/Process",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/Process.git",
                "reference": "bf0c9bd625f13b0b0bbe39919225cf145dfb935a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/Process/zipball/bf0c9bd625f13b0b0bbe39919225cf145dfb935a",
                "reference": "bf0c9bd625f13b0b0bbe39919225cf145dfb935a",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.6-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Symfony\\Component\\Process\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Symfony Community",
                    "homepage": "http://symfony.com/contributors"
                },
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                }
            ],
            "description": "Symfony Process Component",
            "homepage": "http://symfony.com",
            "time": "2014-12-02 20:19:20"
        },
        {
            "name": "symfony/routing",
            "version": "v2.6.1",
            "target-dir": "Symfony/Component/Routing",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/Routing.git",
                "reference": "b50c10839e1639fb3a89710f9510b63cc8be54c5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/Routing/zipball/b50c10839e1639fb3a89710f9510b63cc8be54c5",
                "reference": "b50c10839e1639fb3a89710f9510b63cc8be54c5",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "require-dev": {
                "doctrine/annotations": "~1.0",
                "psr/log": "~1.0",
                "symfony/config": "~2.2",
                "symfony/expression-language": "~2.4",
                "symfony/http-foundation": "~2.3",
                "symfony/yaml": "~2.0"
            },
            "suggest": {
                "doctrine/annotations": "For using the annotation loader",
                "symfony/config": "For using the all-in-one router or any loader",
                "symfony/expression-language": "For using expression matching",
                "symfony/yaml": "For using the YAML loader"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.6-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Symfony\\Component\\Routing\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Symfony Community",
                    "homepage": "http://symfony.com/contributors"
                },
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                }
            ],
            "description": "Symfony Routing Component",
            "homepage": "http://symfony.com",
            "keywords": [
                "router",
                "routing",
                "uri",
                "url"
            ],
            "time": "2014-12-02 20:19:20"
        },
        {
            "name": "symfony/translation",
            "version": "v2.6.1",
            "target-dir": "Symfony/Component/Translation",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/Translation.git",
                "reference": "5b8bf84a43317021849813f556f26dc35968156b"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/Translation/zipball/5b8bf84a43317021849813f556f26dc35968156b",
                "reference": "5b8bf84a43317021849813f556f26dc35968156b",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "require-dev": {
                "psr/log": "~1.0",
                "symfony/config": "~2.0",
                "symfony/intl": "~2.3",
                "symfony/yaml": "~2.2"
            },
            "suggest": {
                "psr/log": "To use logging capability in translator",
                "symfony/config": "",
                "symfony/yaml": ""
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.6-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Symfony\\Component\\Translation\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Symfony Community",
                    "homepage": "http://symfony.com/contributors"
                },
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                }
            ],
            "description": "Symfony Translation Component",
            "homepage": "http://symfony.com",
            "time": "2014-12-02 20:19:20"
        },
        {
            "name": "symfony/validator",
            "version": "v2.6.1",
            "target-dir": "Symfony/Component/Validator",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/Validator.git",
                "reference": "4583e0321f1bcdad14d93e265eaca1001035b5c4"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/Validator/zipball/4583e0321f1bcdad14d93e265eaca1001035b5c4",
                "reference": "4583e0321f1bcdad14d93e265eaca1001035b5c4",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3",
                "symfony/translation": "~2.0"
            },
            "require-dev": {
                "doctrine/annotations": "~1.0",
                "doctrine/cache": "~1.0",
                "egulias/email-validator": "~1.0",
                "symfony/config": "~2.2",
                "symfony/expression-language": "~2.4",
                "symfony/http-foundation": "~2.1",
                "symfony/intl": "~2.3",
                "symfony/property-access": "~2.2",
                "symfony/yaml": "~2.0"
            },
            "suggest": {
                "doctrine/annotations": "For using the annotation mapping. You will also need doctrine/cache.",
                "doctrine/cache": "For using the default cached annotation reader and metadata cache.",
                "egulias/email-validator": "Strict (RFC compliant) email validation",
                "symfony/config": "",
                "symfony/expression-language": "For using the 2.4 Expression validator",
                "symfony/http-foundation": "",
                "symfony/intl": "",
                "symfony/property-access": "For using the 2.4 Validator API",
                "symfony/yaml": ""
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.6-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Symfony\\Component\\Validator\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Symfony Community",
                    "homepage": "http://symfony.com/contributors"
                },
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                }
            ],
            "description": "Symfony Validator Component",
            "homepage": "http://symfony.com",
            "time": "2014-12-02 20:19:20"
        },
        {
            "name": "symfony/yaml",
            "version": "v2.6.1",
            "target-dir": "Symfony/Component/Yaml",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/Yaml.git",
                "reference": "3346fc090a3eb6b53d408db2903b241af51dcb20"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/Yaml/zipball/3346fc090a3eb6b53d408db2903b241af51dcb20",
                "reference": "3346fc090a3eb6b53d408db2903b241af51dcb20",
                "shasum": ""
            },
            "require": {
                "php": ">=5.3.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.6-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Symfony\\Component\\Yaml\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Symfony Community",
                    "homepage": "http://symfony.com/contributors"
                },
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                }
            ],
            "description": "Symfony Yaml Component",
            "homepage": "http://symfony.com",
            "time": "2014-12-02 20:19:20"
        },
        {
            "name": "twig/twig",
            "version": "v1.16.2",
            "source": {
                "type": "git",
                "url": "https://github.com/twigphp/Twig.git",
                "reference": "42f758d9fe2146d1f0470604fc05ee43580873fc"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/twigphp/Twig/zipball/42f758d9fe2146d1f0470604fc05ee43580873fc",
                "reference": "42f758d9fe2146d1f0470604fc05ee43580873fc",
                "shasum": ""
            },
            "require": {
                "php": ">=5.2.4"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.16-dev"
                }
            },
            "autoload": {
                "psr-0": {
                    "Twig_": "lib/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com",
                    "homepage": "http://fabien.potencier.org",
                    "role": "Lead Developer"
                },
                {
                    "name": "Armin Ronacher",
                    "email": "armin.ronacher@active-4.com",
                    "role": "Project Founder"
                },
                {
                    "name": "Twig Team",
                    "homepage": "https://github.com/fabpot/Twig/graphs/contributors",
                    "role": "Contributors"
                }
            ],
            "description": "Twig, the flexible, fast, and secure template language for PHP",
            "homepage": "http://twig.sensiolabs.org",
            "keywords": [
                "templating"
            ],
            "time": "2014-10-17 12:53:44"
        }
    ],
    "packages-dev": [],
    "aliases": [],
    "minimum-stability": "stable",
    "stability-flags": {
        "composer/composer": 20,
        "keeko/bootstrap-design": 20,
        "keeko/website-app": 20,
        "propel/propel": 20,
        "keeko/user": 20,
        "keeko/api-app": 20,
        "keeko/developer-app": 20,
        "keeko/group": 20,
        "keeko/core": 20,
        "keeko/auth": 20,
        "gossi/trixionary": 20,
        "gossi/trixionary-client": 20,
        "gossi/trixionary-app": 20
    },
    "prefer-stable": false,
    "platform": [],
    "platform-dev": []
}
